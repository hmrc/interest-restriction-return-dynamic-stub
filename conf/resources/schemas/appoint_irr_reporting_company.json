{
  "openapi": "3.0.3",
  "info": {
    "title": "Appoint Interest Restrictions Returns Reporting Company",
    "description": "This API provides the capability to register a company as the one handling Interest Restriction Returns.",
    "version": "1.2.0",
    "contact": {
      "name": "Wayne Morris",
      "email": "wayne.morris@hmrc.gov.uk"
    }
  },
  "servers": [
    {
      "url": "http://hostname:port",
      "description": "Actual environment values can be obtained from the IF Platforms team for each environment"
    }
  ],
  "tags": [
    {
      "name": "API#1586",
      "description": "This API provides the capability to register a company as the one handling Interest Restriction Returns."
    }
  ],
  "paths": {
    "/organisations/interest-restrictions-return/appoint": {
      "post": {
        "summary": "API#1586 Appoint IRR Reporting Company",
        "description": "```Example: /organisations/interest-restrictions-return/appoint```\n```\nChange Log\n\nVersion Date        Author         Description\n0.1.0   09-06-2020  Wayne Morris  Initial draft of JSON request schema ONLY for review\n0.2.0   30-06-2020  Wayne Morris  Draft OpenAPI 3 spec for review. Changes since 0.1.0:\n                                  1) companyNameType: Re-named to ukCompanyNameType\n                                  2) globalCompanyNameType: NEW. Open string of between 1 and 500 characters to allow for global company names\n0.3.0   10-07-2020  Wayne Morris  Further updates following review across all 4 AIRR specs. Changes since 0.2.0:\n                                  1) Existing 'nonUkCrn' properties replaced with 'legalEntityIdentifier' properties\n                                  2) New definition 'legalEntityIdentifierType' added and used by the 2 new 'legalEntityIdentifier' properties\n                                  3) globalCompanyNameType: description and regex changed to match those for ukCompanyNameType\n                                  4) identityOfAppointingCompany: 'companyName' uses the globalCompanyNameType definition instead of ukCompanyNameType\n                                  5) Updated the Full Population example request to use the new 'legalEntityIdentifier' properties\n0.4.0   15-07-2020  Wayne Morris  Further external review comments:\n                                  1) Removed the 'crn' property from each of 'reportingCompany', 'identityOfAppointingCompany', and 'ultimateParentCompany' in the request schema and request examples\n                                  2) Removed the 'crnType' definition\n1.0.0   17-07-2020  Wayne Morris  Baselined\n1.1.0   21-07-2020  Wayne Morris  Corrected root context from 'individuals' to 'organisations'\n1.2.0   23-07-2020  Wayne Morris  Amended the 502 BAD_GATEWAY error response to the standard 503 SERVICE_UNAVAILABLE response",
        "operationId": "appointIRR",
        "tags": [
          "API#1586"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/environment"
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The request body contains mandatory and optional data items in order to appoint an IRR reporting company",
          "content": {
            "application/json;charset=UTF-8": {
              "schema": {
                "$ref": "#/components/schemas/request"
              },
              "examples": {
                "Full Population": {
                  "summary": "Example request with all properties",
                  "value": {
                    "agentDetails": {
                      "agentActingOnBehalfOfCompany": true,
                      "agentName": "AAgent"
                    },
                    "reportingCompany": {
                      "companyName": "ACompany",
                      "ctutr": "1123456789",
                      "sameAsUltimateParent": true
                    },
                    "isReportingCompanyAppointingItself": false,
                    "identityOfAppointingCompany": {
                      "companyName": "BCompany",
                      "countryOfIncorporation": "UK",
                      "ctutr": "9999999999",
                      "legalEntityIdentifier": "Z29900T8BM49AURSDO53"
                    },
                    "authorisingCompanies": [
                      {
                        "companyName": "CCompany",
                        "utr": "5555555555",
                        "consenting": true
                      },
                      {
                        "companyName": "D-Company, with unusual chars & % ! | ~ #",
                        "utr": "1122334455",
                        "consenting": true
                      }
                    ],
                    "ultimateParentCompany": {
                      "isUk": true,
                      "companyName": "E*Company$$",
                      "ctutr": "0000000000",
                      "sautr": "1237658890",
                      "knownAs": "655 Squadron",
                      "countryOfIncorporation": "ZA",
                      "legalEntityIdentifier": "549300QKDHYRRQH2MB86"
                    },
                    "accountingPeriod": {
                      "startDate": "2018-11-01",
                      "endDate": "2019-12-01"
                    },
                    "declaration": true
                  }
                },
                "Minimal Population": {
                  "summary": "Example request with only required properties",
                  "value": {
                    "agentDetails": {
                      "agentActingOnBehalfOfCompany": true,
                      "agentName": "AAgent"
                    },
                    "reportingCompany": {
                      "companyName": "ACompany",
                      "ctutr": "1123456789",
                      "sameAsUltimateParent": true
                    },
                    "isReportingCompanyAppointingItself": false,
                    "identityOfAppointingCompany": {
                      "companyName": "BCompany",
                      "ctutr": "9999999999"
                    },
                    "authorisingCompanies": [
                      {
                        "companyName": "CCompany",
                        "utr": "5555555555"
                      }
                    ],
                    "accountingPeriod": {
                      "startDate": "2018-11-01",
                      "endDate": "2019-12-01"
                    },
                    "declaration": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                },
                "examples": {
                  "Response sample": {
                    "value": {
                      "acknowledgementReference": "44756487"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request\n```\n\"code\"                 \"reason\"\nINVALID_PAYLOAD         Submission has not passed validation. Invalid payload.\nINVALID_CORRELATIONID   Submission has not passed validation. Invalid Header CorrelationId.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Bad request - single code sample": {
                    "value": {
                      "failures": [
                        {
                          "code": "INVALID_PAYLOAD",
                          "reason": "Submission has not passed validation. Invalid payload."
                        }
                      ]
                    }
                  },
                  "Bad request - Multiple Error Codes": {
                    "value": {
                      "failures": [
                        {
                          "code": "INVALID_CORRELATIONID",
                          "reason": "Submission has not passed validation. Invalid Header CorrelationId."
                        },
                        {
                          "code": "INVALID_PAYLOAD",
                          "reason": "Submission has not passed validation. Invalid payload."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error\n```\n\"code\"         \"reason\"\nSERVER_ERROR   IF is currently experiencing problems that require live service intervention.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Server Error sample": {
                    "value": {
                      "failures": [
                        {
                          "code": "SERVER_ERROR",
                          "reason": "IF is currently experiencing problems that require live service intervention."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n```\n\"code\"               \"reason\"\nSERVICE_UNAVAILABLE  Dependent systems are currently not responding.",
            "headers": {
              "CorrelationId": {
                "$ref": "#/components/headers/CorrelationId"
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "failures": [
                        {
                          "code": "SERVICE_UNAVAILABLE",
                          "reason": "Dependent systems are currently not responding."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "headers": {
      "CorrelationId": {
        "description": "CorrelationID - Used for traceability purposes when present",
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{12}$"
        }
      },
      "Content-Type": {
        "description": "Tells the client what the content type of the returned content actually is",
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        }
      }
    },
    "parameters": {
      "environment": {
        "in": "header",
        "name": "Environment",
        "description": "Mandatory. The environment in use.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ist0",
            "clone",
            "live"
          ]
        }
      },
      "correlationId": {
        "in": "header",
        "name": "CorrelationId",
        "description": "Optional. A UUID format string for the transaction. If not specified the IF will create a UUID value to be used",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{4}[-][0-9a-fA-F]{12}$"
        }
      }
    },
    "schemas": {
      "request": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "agentDetails": {
            "description": "Required. If the agent is acting on behalf of the reporting company then the agent's name should be provided",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "agentActingOnBehalfOfCompany"
            ],
            "properties": {
              "agentActingOnBehalfOfCompany": {
                "type": "boolean"
              },
              "agentName": {
                "$ref": "#/components/schemas/ukCompanyNameType"
              }
            }
          },
          "reportingCompany": {
            "description": "Required. The details of the reporting company",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "companyName",
              "ctutr",
              "sameAsUltimateParent"
            ],
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/ukCompanyNameType"
              },
              "ctutr": {
                "$ref": "#/components/schemas/utrType"
              },
              "sameAsUltimateParent": {
                "description": "Required.",
                "type": "boolean"
              }
            }
          },
          "authorisingCompanies": {
            "description": "Required. The details of the authorising companies",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "companyName": {
                  "$ref": "#/components/schemas/ukCompanyNameType"
                },
                "utr": {
                  "$ref": "#/components/schemas/utrType"
                },
                "consenting": {
                  "type": "boolean"
                }
              },
              "required": [
                "companyName",
                "utr"
              ]
            }
          },
          "isReportingCompanyAppointingItself": {
            "description": "Required.",
            "type": "boolean"
          },
          "identityOfAppointingCompany": {
            "description": "Optional. The details of the appointing company",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/globalCompanyNameType"
              },
              "countryOfIncorporation": {
                "$ref": "#/components/schemas/countryCodesType"
              },
              "ctutr": {
                "$ref": "#/components/schemas/utrType"
              },
              "legalEntityIdentifier": {
                "$ref": "#/components/schemas/legalEntityIdentifierType"
              }
            },
            "required": [
              "companyName"
            ]
          },
          "ultimateParentCompany": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "isUk": {
                "description": "Required.",
                "type": "boolean"
              },
              "companyName": {
                "$ref": "#/components/schemas/globalCompanyNameType"
              },
              "ctutr": {
                "$ref": "#/components/schemas/utrType"
              },
              "sautr": {
                "$ref": "#/components/schemas/utrType"
              },
              "knownAs": {
                "$ref": "#/components/schemas/globalCompanyNameType"
              },
              "countryOfIncorporation": {
                "$ref": "#/components/schemas/countryCodesType"
              },
              "legalEntityIdentifier": {
                "$ref": "#/components/schemas/legalEntityIdentifierType"
              }
            },
            "required": [
              "isUk",
              "companyName"
            ]
          },
          "accountingPeriod": {
            "description": "Required.",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "startDate",
              "endDate"
            ],
            "properties": {
              "startDate": {
                "$ref": "#/components/schemas/dateType"
              },
              "endDate": {
                "$ref": "#/components/schemas/dateType"
              }
            }
          },
          "declaration": {
            "type": "boolean"
          }
        },
        "required": [
          "agentDetails",
          "reportingCompany",
          "authorisingCompanies",
          "isReportingCompanyAppointingItself",
          "accountingPeriod",
          "declaration"
        ]
      },
      "ukCompanyNameType": {
        "description": "Allow Unicode blocks Basic Latin (Space to Tilde), printable Latin-1 Supplement (¡ to ÿ), and all of Latin Extended-A and Latin Extended-B and IP Extensions (Ā to ʯ), all the Latin Extended Additional characters (Ḁ to ỿ), General Punctuation characters Hyphen to Horizontal Bar (‐ to ―), General Punctuation characters (‘ to ‟), Currency Symbol characters (₠ to ₿), Letterlike Symbols Å and K",
        "type": "string",
        "pattern": "^[ -~¡-ÿĀ-ʯḀ-ỿ‐-―‘-‟₠-₿ÅK]{1,160}$"
      },
      "globalCompanyNameType": {
        "type": "string",
        "description": "Allow Unicode blocks Basic Latin (Space to Tilde), printable Latin-1 Supplement (¡ to ÿ), and all of Latin Extended-A and Latin Extended-B and IP Extensions (Ā to ʯ), all the Latin Extended Additional characters (Ḁ to ỿ), General Punctuation characters Hyphen to Horizontal Bar (‐ to ―), General Punctuation characters (‘ to ‟), Currency Symbol characters (₠ to ₿), Letterlike Symbols Å and K",
        "pattern": "^[ -~¡-ÿĀ-ʯḀ-ỿ‐-―‘-‟₠-₿ÅK]{1,160}$"
      },
      "utrType": {
        "description": "A UTR of 10 numeric characters",
        "type": "string",
        "pattern": "^[0-9]{10}$"
      },
      "legalEntityIdentifierType": {
        "type": "string",
        "description": "A Legal Entity Identifier (LEI); format is as per the ISO 17442 standard - 18 uppercase alphabetic or numeric characters followed by 2 numeric characters",
        "pattern": "^[0-9A-Z]{18}[0-9]{2}$",
        "title": ""
      },
      "dateType": {
        "description": "Format YYYY-MM-DD in the range 1900-01-01 to 2099-12-31 accommodating leap years",
        "type": "string",
        "pattern": "^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
      },
      "countryCodesType": {
        "description": "List of ISO 3166-1 2 Alpha Country Codes",
        "type": "string",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CS",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DD",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "EU",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NT",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TP",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UK",
          "UM",
          "UN",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "errorResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "failures"
        ],
        "properties": {
          "failures": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "code",
                "reason"
              ],
              "properties": {
                "code": {
                  "description": "Keys for all the errors returned",
                  "type": "string",
                  "pattern": "^[A-Z0-9_-]{1,160}$"
                },
                "reason": {
                  "description": "A simple description for the failure",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 160
                }
              }
            }
          }
        }
      },
      "response": {
        "type": "object",
        "properties": {
          "acknowledgementReference": {
            "type": "string",
            "description": "A reference for the stored record",
            "minLength": 4,
            "maxLength": 36
          }
        },
        "required": [
          "acknowledgementReference"
        ]
      }
    }
  }
}